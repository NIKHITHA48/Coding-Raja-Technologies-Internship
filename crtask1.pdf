                                             TASK 1:- Blogging Platform
HTML STRUCTURE(index.html)

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Blog Platform</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <header>
        <h1>Blog Platform</h1>
    </header>
    <main id="main-content">
        <!-- Blog posts will be dynamically added here -->
    </main>
    <footer>
        <p>&copy; 2024 Blog Platform</p>
    </footer>
    <script src="scripts.js"></script>
</body>
</html>

CSS STYLES(styles.css)
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}

header, footer {
    background-color: #333;
    color: #fff;
    padding: 1rem;
    text-align: center;
}

main {
    padding: 1rem;
}

.post {
    border-bottom: 1px solid #ccc;
    margin-bottom: 1rem;
    padding-bottom: 1rem;
}

.post h2 {
    margin-top: 0;
}

.post p {
    margin-bottom: 0.5rem;
}

JAVASCRIPT FOR DYNAMIC CONTENT(script.js)

// Example data for blog posts (replace with actual data from backend)
const posts = [
    { title: "First Post", content: "This is the content of the first post." },
    { title: "Second Post", content: "This is the content of the second post." }
];

// Function to display blog posts
function displayPosts() {
    const mainContent = document.getElementById("main-content");
    mainContent.innerHTML = "";
    posts.forEach(post => {
        const postElement = document.createElement("div");
        postElement.classList.add("post");
        postElement.innerHTML = `
            <h2>${post.title}</h2>
            <p>${post.content}</p>
        `;
        mainContent.appendChild(postElement);
    });
}

// Display posts when the page loads
window.onload = displayPosts;

NODE.JS BACKEND(app.js)
const express = require('express');
const app = express();
const PORT = 3000;

// Example data for blog posts (replace with actual data from database)
const posts = [
    { title: "First Post", content: "This is the content of the first post." },
    { title: "Second Post", content: "This is the content of the second post." }
];

// Route to get all posts
app.get('/api/posts', (req, res) => {
    res.json(posts);
});

app.listen(PORT, () => {
    console.log(`Server is running on http://localhost:${PORT}`);
});

PYTHON BACKEND(app.py)

from flask import Flask, jsonify

app = Flask(__name__)

# Example data for blog posts (replace with actual data from database)
posts = [
    {"title": "First Post", "content": "This is the content of the first post."},
    {"title": "Second Post", "content": "This is the content of the second post."}
]

# Route to get all posts
@app.route('/api/posts')
def get_posts():
    return jsonify(posts)

if __name__ == '__main__':
    app.run(debug=True)